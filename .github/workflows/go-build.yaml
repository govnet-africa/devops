
env:
  GOPRIVATE: "github.com/govnet-ecitizen"
  OUTPUT_BIN: ${{ inputs.service }}-bin
  DOCKERHUB_REPO: ${{ inputs.dockerhub-org }}/${{ inputs.dockerhub-repo }}
  DOCKERFILE_BUILDER_IMG: alpine
on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        default: null
      go-version:
        required: false
        type: string
        default: '1.21'
      service:
        required: true
        type: string
      service-port:
        required: false
        type: number
        default: 80
      dockerhub-org:
        required: false
        type: string
        default: 'govnetservices'
      dockerhub-repo:
        required: false
        type: string
        default: ${{inputs.service}}
    # secrets: 
      gomod-token:
        required: false
        type: string
        default: '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'
      git-user:
        type: string
        required: false
        default: 'ronaldkasagga'
jobs:
  go-build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v3
    - name: Configure Netrc
      uses: extractions/netrc@v1
      with:
        machine: github.com
        username: ${{ inputs.git-user }}
        password: ${{ inputs.gomod-token }}
    - name: Do version preps
      run: |
        echo "GITHUB_SHA_SHORT=`git rev-parse --short ${{ github.sha }}`" >> $GITHUB_ENV
        echo "GITHUB_BRANCH_SHORT=`git branch --show-current | sed 's/\//_/g' | tr -d ' '`" >> $GITHUB_ENV
        echo "DOCKERHUB_REPO=${{ inputs.dockerhub-org }}/$(echo ${{ inputs.dockerhub-repo }} | cut -d '/' -f 2)" >> $GITHUB_ENV
        echo "SERVICE_BUILD=`date -I`-`git rev-parse --short ${{ github.sha }}`" >> $GITHUB_ENV
        echo "GITHUB_BRANCH_SHORT=`git branch --show-current | sed 's/\//_/g' | tr -d ' '`" >> $GITHUB_ENV
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: govnetservices
        password: 'dckr_pat_TLq0t2oN4tqcYXtMXghD_sozOog' 
    - name: Setup go ${{ inputs.go-version }}
      uses: actions/setup-go@v4
      with:
        token: ${{ inputs.gomod-token }}
        go-version: ${{ inputs.go-version }}
        cache: true   
    - name: Download ${{ inputs.service }} dependencies
      run: go mod download
    - name: Build ${{ inputs.service }}
      run: |
        CGO_ENABLED=0 GO111MODULE=on GOOS=linux \
          go build \
          -ldflags "-s -w -X main.Release=${{ inputs.service }}-${{ env.SERVICE_BUILD }} -X main.SHA=${{ github.sha }}" \
          -o ${{ env.OUTPUT_BIN }}
    - name: Write Dockerfile
      run: |
        cat <<EOF > Dockerfile 
        FROM ${{ env.DOCKERFILE_BUILDER_IMG }} as builder
        RUN apk add --no-cache ca-certificates tzdata
        FROM scratch
        WORKDIR /
        COPY ${{ env.OUTPUT_BIN }} .
        COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
        COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo
        ENV APP_HTTP_PORT=${{ inputs.service-port }}
        ENV VERSION=${{ inputs.service }}-${{ inputs.version || env.GITHUB_SHA_SHORT }}
        ENV SOURCE=github.com/${{ github.repository_id }}/${{ github.repository }}@${{ inputs.version || env.GITHUB_SHA_SHORT }}
        EXPOSE ${{ inputs.service-port }}
        CMD ["/${{ env.OUTPUT_BIN }}"]
        EOF
    - name: Docker (build + push) ${{ inputs.service }} image to registry
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}
          ${{ env.DOCKERHUB_REPO }}:${{ inputs.version || env.GITHUB_SHA_SHORT }}
          ${{ env.DOCKERHUB_REPO }}:latest